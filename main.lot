\boolfalse {citerequest}\boolfalse {citetracker}\boolfalse {pagetracker}\boolfalse {backtracker}\relax 
\babel@toc {english}{}
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {table}{\numberline {3.1}{\ignorespaces Number of LoC for each module\relax }}{22}{table.caption.100}
\addvspace {10\p@ }
\contentsline {table}{\numberline {4.1}{\ignorespaces Statistics of the gadgets used for the payload.\relax }}{39}{table.caption.210}
\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {table}{\numberline {6.1}{\ignorespaces \emph {Actions} used to define valid transactions grouped by \emph {generic} and \emph {stop}, respectively.\relax }}{61}{table.caption.296}
\contentsline {table}{\numberline {6.2}{\ignorespaces Coverage analysis over our five use cases: \textsf {Contact}~\citep {signalrepo}, \textsf {libdvdcss}~\citep {libdvdcss}, \textsf {StealthDB}~\citep {stealthdb}, \textsf {SGX-Biniax2}~\citep {bauman2016case}, and a unit-test. The results show that the analysis covers from $91.6\%$ to $96.6\%$ of the \emph {actions} in around $2$ hours and $20$ minutes in total ($8561.10$s). Furthermore, we did not observe any false positive during our experiments, meaning we covered a significant portion of code.\relax }}{75}{table.caption.414}
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {table}{\numberline {A.1}{\ignorespaces SGX open-source projects extracted from~\cite {asop}.\relax }}{81}{table.caption.428}
\addvspace {10\p@ }
\addvspace {10\p@ }
